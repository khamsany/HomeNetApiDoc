FORMAT: 1A
HOST: http://development.ihomenet.net/api/
# HomeNet

HomeNet API documentation for developer to easily test & playaround with

All Reference with * at the end is still under maintenance

# Data Structures

## ServiceRequestModel 
+ belongs_to (enum[string], required) - Owner type of the Service Request
            + Default: manager
            + Members
                + manager
                + vendor
                + user
+ belongs_to_id (number, required) - Owner id
+ available_datetime: 12/01/2017 12:30 AM (string, optional) - Available date & time format d/m/Y h:i A
+ due_date: 12/01/2017 (string, optional) - Due date e.g format d/m/Y
+ title (string, required)
+ property_id (number, required) - Property id
+ priority (enum[number], required)
    + Default: 1
    + Members
        + 1 - Low
        + 2 - Normal
        + 3 - High
+ description (string, optional)
+ type (number, required) - service type id
+ files (array, optional) - files to upload

## CommentModel
+ text (string, required)

## Activity* [/activity]
### Activity List [GET]
Under Maintenance

+ Response 200

## Announcement [/announcement]
    
### Announcement List [GET]
Get announcement list

+ Request
    + Attributes
        + page (number, optional) - page number navigation
        + limit (number, optional) - record limit per page
        + sort_by (string, optional) - sorting column name
        + sort (string, optional) - direction of sorting e.g asc, desc
        + query (string, optional) - search text

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": 29,
                    "manager_id": 11,
                    "name": "Management Office",
                    "designation": "Admin",
                    "email": "",
                    "mobile": "016.2100.792",
                    "phone1": "03.6156.1321",
                    "phone2": "",
                    "fax": null,
                    "avatar": "http://homenet.app/metro/pages/img/avatars/team4.jpg",
                    "tags": null,
                    "created_at": null,
                    "updated_at": null
                }
            ],
            "meta": {
                "pagination": {
                    "total": 10,
                    "count": 10,
                    "per_page": 20,
                    "current_page": 1,
                    "total_pages": 1,
                    "links": []
                }
            }
        }
        
### Announcement Details [GET /{id}]
Get announcement details

+ Parameters
    + id (number, required) - announcement's id

+ Response 200 (application/json)
        
        {
            "id": 5,
            "subject": "Dear Resident Fellow",
            "text": "<p>Firstly, I would like to take this opportunity to welcoming new residents at Saville @ Melawati to our community. Secondly, I\ufffdm taking this opportunity to update you on some recent developments at our community and pass on some information for your benefit.</p>",
            "belongs_to_id": 11,
            "belongs_to_type": "manager",
            "category": "announcement",
            "type": null,
            "status": 2,
            "important": null,
            "star": null,
            "created_at": "2017-09-19 05:02:15",
            "updated_at": "2017-09-19 05:02:15",
            "deleted_at": null,
            "created_by": 540,
            "updated_by": null,
            "deleted_by": null,
            "sender_id": 0,
            "sender_type": "",
            "sent_by": 540,
            "sent_at": "2017-09-19 05:02:15"
        }

## Facility* [/facility]
### Facility List [GET]
Under Maintenance

+ Response 200

## Facility Booking [/booking]
### Facility Booking List [GET]
Get Booking List for Management / Resident base on view state

+ Request
    + Attributes
        + page (number, optional) - page number navigation
        + limit (number, optional) - record limit per page
        + sort_by (string, optional) - sorting column name
        + sort (string, optional) - direction of sorting e.g asc, desc
        + query (string, optional) - search text
        

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": 2,
                    "facility_id": 2,
                    "manager_id": 1,
                    "residence_id": 72,
                    "start_datetime": "2017-10-20 13:10:00",
                    "end_datetime": "2017-10-22 17:10:00",
                    "priority": 2,
                    "request_note": null,
                    "status": 2,
                    "created_at": "2017-09-19 05:00:25",
                    "updated_at": "2017-09-19 05:00:25",
                    "deleted_at": null,
                    "created_by": 2,
                    "updated_by": 2,
                    "deleted_by": null,
                    "user": {
                        "id": 2,
                        "name": "Khamsany Misran",
                        "email": "khamsany@yahoo.com",
                        "facebook_id": null,
                        "google_id": null,
                        "avatar": "http://homenet.app/metro/pages/img/avatars/team3.jpg",
                        "register_as": "manager",
                        "phone1": null,
                        "phone2": null,
                        "mobile": null,
                        "active": 1,
                        "created_at": null,
                        "updated_at": "2017-09-21 11:08:41"
                    },
                    "manager": {
                        "id": 1,
                        "name": "Millennium @ Technology Park",
                        "property_name": "Millennium @ Technology Park",
                        "description": "Developer test suite",
                        "address": "3, Enterprise 3B, Technology Park, Bukit Jalil, Kuala Lumpur",
                        "zipcode": "57000",
                        "created_by": 1,
                        "updated_by": null,
                        "created_at": null,
                        "updated_at": null,
                        "lng": "101.68871500",
                        "lat": "3.04764200"
                    },
                    "facility": {
                        "id": 2,
                        "manager_id": 1,
                        "name": "Badminton Court",
                        "description": null,
                        "created_at": "2017-09-19 05:00:25",
                        "updated_at": "2017-09-19 05:00:25",
                        "deleted_at": null,
                        "created_by": 5,
                        "updated_by": 14,
                        "deleted_by": null
                    },
                    "residence": {
                        "id": 72,
                        "manager_id": 1,
                        "user_id": 2,
                        "name": "Khamsany Misran",
                        "phone": null,
                        "mobile": null,
                        "email": "khamsany@yahoo.com",
                        "user_linked_at": "2017-09-19 05:00:24",
                        "user_linked_by": null,
                        "created_at": "2017-09-19 05:00:24",
                        "updated_at": "2017-09-19 05:00:24",
                        "deleted_at": null,
                        "created_by": null,
                        "updated_by": null,
                        "deleted_by": null
                    }
                }
            ],
            "meta": {
                "pagination": {
                    "total": 1,
                    "count": 1,
                    "per_page": 20,
                    "current_page": 1,
                    "total_pages": 1,
                    "links": []
                }
            }
        }

## Incident Report* [/report/incident]
### Incident Report List [GET]
Under Maintenance

+ Response 200

## Neighborhood Explorer* [/explorer]
### Neighborhood Explorer List [GET]

+ Response 200

## Phonebook [/phonebook/{id}]
+ Parameters
    + id (number, optional) - id only for updating

### List Phonebook [GET]
Get Property's phonebooks data

+ Request
    + Attributes
        + page (number, optional) - page number navigation
        + limit (number, optional) - record limit per page
        + sort_by (string, optional) - sorting column name
        + sort (string, optional) - direction of sorting e.g asc, desc
        + query (string, optional) - search text
        
+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "",
                    "manager_id": "",
                    "name": "Rashawn Nienow",
                    "designation": "Manager",
                    "email": "rashawn_nienow@huel.info",
                    "mobile": "+6018202-8300",
                    "phone1": "+6032788-4284",
                    "phone2": "+6032788-4284",
                    "fax": "+6032788-4284",
                    "avatar": "http://homenet.app/metro/pages/img/avatars/team9.jpg",
                    "tags": [],
                    "created_at": "2017-09-19 05:00:17",
                    "updated_at": "2017-09-19 05:00:17"
                }
            ],
            "meta": {
                "pagination": {
                    "total": "",
                    "count":"",
                    "per_page": "",
                    "current_page": "",
                    "total_pages": "",
                    "links": []
                }
            }
        }

### Create Phonebook [POST]
Creating Phonebook

+ Request (application/json)
    + Attributes
        + name (string, required) - Contact Name
        + designation (string) - Contactdesignation
        + phone1 (string) - phone1
        + mobile (string) - mobile
        + email (string) - email
        + avatar (string) - File

+ Response 200

### Delete Phonebook [DELETE]
Deleting Phonebook

+ Request (application/json)
    + Attributes
        + id (string, required) - id
        + _method (string, required) - DELETE

+ Response 200

## Profile [/profile]
View current logged user profile

### Fetch User Profile [GET]

+ Request (application/json)

+ Response 200 (application/json)

        {   
            "id": "user_id",
            "name": "user_full_name",
            "email": "user_email",
            "phone": "user_phone",
            "mobile": "user_mobile",
            "avatar": "user_avatar"
        }

## Repository [/repository]

### Repository List [GET /{?manager_id,withFiles}]
+ Parameters
    + manager_id: manager id (number, optional) - When view state is "Manager" this will be ignore
    + withFiles: to attach with files (boolean, optional) - set to 1 if you require list to be attached in the list together

+ Response 200

## Service Request [/service/request]
        
### List [GET]
+ Request
    + Attributes
        + page (number, optional) - page number navigation
        + limit (number, optional) - record limit per page
        + sort_by (string, optional) - sorting column name
        + sort (string, optional) - direction of sorting e.g asc, desc
        + query (string, optional) - search text
        + filter_manager_id (number, optional) - when in user state, this parameter is to filter the manager
        + status (enum[number], optional)
        + priority (enum[number], optional)
            + Members
                + 1 - Low
                + 2 - Normal
                + 3 - High

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": 6,
                    "title": "Bill,' thought Alice,) 'Well, I should think it.",
                    "type": 6,
                    "description": "I then? Tell me that first, and then, if I like being that person, I'll come up: if not, I'll stay down here till I'm somebody else\"--but, oh dear!' cried Alice, with a sudden burst of tears, 'I do wish they WOULD put their heads down! I am so VERY tired of being all alone here!' As she said this she looked down at her feet, they seemed to be almost out of sight, they were getting so far off). 'Oh, my poor little feet, I wonder who will put on your shoes and stockings for you now, dears? I'm.",
                    "priority": 2,
                    "status": 2,
                    "belongs_to": "manager",
                    "belongs_to_id": 1,
                    "property_id": 211,
                    "due_date": "2017-11-09",
                    "available_datetime": "2017-10-29 03:48:04",
                    "rating_id": null,
                    "owner_type": "user",
                    "owner_id": 29,
                    "created_at": "2017-09-26 03:48:04",
                    "updated_at": "2017-09-26 03:48:04",
                    "deleted_at": null,
                    "created_by": 29,
                    "updated_by": 29,
                    "deleted_by": null,
                    "rating": null,
                    "assignee": {
                        "id": 1,
                        "name": "Millennium @ Technology Park",
                        "property_name": "Millennium @ Technology Park",
                        "description": "Developer test suite",
                        "address": "3, Enterprise 3B, Technology Park, Bukit Jalil, Kuala Lumpur",
                        "zipcode": "57000",
                        "lng": "101.68871500",
                        "lat": "3.04764200",
                        "created_by": 1,
                        "updated_by": null,
                        "created_at": null,
                        "updated_at": null
                    },
                    "user": {
                        "id": 29,
                        "name": "Corene Sauer",
                        "nickname": null,
                        "email": "user-0016@millenium.com",
                        "facebook_id": null,
                        "google_id": null,
                        "avatar": "http://homenet.app/metro/pages/img/avatars/team1.jpg",
                        "register_as": null,
                        "phone1": null,
                        "phone2": null,
                        "mobile": null,
                        "active": null,
                        "created_at": null,
                        "updated_at": null
                    }
                }
            ],
            "meta": {
                "pagination": {
                    "total": 9,
                    "count": 9,
                    "per_page": 20,
                    "current_page": 1,
                    "total_pages": 1,
                    "links": []
                }
            }
        }

### Service Type Options [GET /service/request/types]

+ Response 200 (application/json)
        
        {
            "1": "Air Cond",
            "2": "Cleaning",
            "3": "Electrical",
            "4": "Flooring",
            "5": "Carpentry",
            "6": "Painting",
            "7": "Pest Control",
            "8": "Plumbing",
            "9": "Mover",
            "15": "Others"
        }

### Service Type Assignees [GET /service/request/providers]
+ Response 200 (application/json)

        [
            {
            "name": "Vendor",
            "value": "vendor"
            }
        ]

### Service Vendors [GET /service/request/vendors/{type_id}]
+ Parameters 
    + type_id (number, required) - Service request type id
    
+ Attributes
    + property_id (number, optional) - to filter vendor within radius from selected property

+ Response 200 (application/json)
        
        [
            {
                "id": 25,
                "name": "Adams Ltd",
                "description": "Dolores accusamus molestiae reiciendis numquam. Cum est voluptas qui et sed dolores. Sapiente nobis rerum illo a. Porro enim atque necessitatibus numquam et.",
                "start_day": "",
                "end_day": "",
                "start_time": "",
                "end_time": "",
                "address": "Ipoh, Perak",
                "zipcode": "",
                "phone1": "(54) 3119-7658",
                "phone2": "",
                "fax": "",
                "mobile": "",
                "lng": "101.09010600",
                "lat": "4.59747900",
                "radius": 45,
                "created_at": "2017-09-26 03:48:18",
                "updated_at": "2017-09-26 03:48:18",
                "deleted_at": "",
                "created_by": "",
                "updated_by": "",
                "deleted_by": "",
                "vendor_id": 25,
                "category_id": 1
            }
        ]
        
### Service Properties [GET /service/request/properties/{assignee}]
+ Parameters
    + assignee: vendor (string, required) - vendor or manager
+ Response 200 (application/json)
    
        [
            {
                "id": 250,
                "name": "Millennium @ Technology Park",
                "belongs_to": "user",
                "belongs_to_id": 2,
                "ownership": "landlord",
                "unit_number": "A-05-04",
                "registered_property_id": 1,
                "description": "Millennium @ Technology Park unit property",
                "address": "3, Enterprise 3B, Technology Park, Bukit Jalil, Kuala Lumpur",
                "zipcode": "57000",
                "bedroom_nos": 3,
                "bathroom_nos": 2,
                "parking_nos": 2,
                "floor_nos": 1,
                "size": 1300,
                "size_unit": "sf",
                "type": null,
                "lng": "101.68871500",
                "lat": "3.04764200",
                "created_at": "2017-09-26 03:44:39",
                "updated_at": "2017-09-26 03:44:39",
                "deleted_at": null,
                "created_by": 2,
                "updated_by": 2,
                "deleted_by": null,
                "registered_property": {
                    "id": 1,
                    "name": "Millennium @ Technology Park",
                    "property_name": "Millennium @ Technology Park",
                    "description": "Developer test suite",
                    "address": "3, Enterprise 3B, Technology Park, Bukit Jalil, Kuala Lumpur",
                    "zipcode": "57000",
                    "lng": "101.68871500",
                    "lat": "3.04764200",
                    "created_by": 1,
                    "updated_by": null,
                    "created_at": null,
                    "updated_at": null
                }
            }
        ]
        
### Create [POST]

+ Request (application/json)
      + Attributes (ServiceRequestModel)  
+ Response 200

### Update [PUT /service/request/{id}]

+ Parameters
    + id (number, required) - Service Request's id
    
+ Request (application/json)
    + Attributes (ServiceRequestModel)

+ Response 200

### Delete [DELETE /service/request/{id}]

+ Parameters
    + id (number, required) - Service Request's id

+ Response 200

### Add Comment [POST /service/request/comment/{id}]

+ Parameters
    + id (number, required) - Service Request's id

+ Request (application/json)
    + Attributes (CommentModel)
        + text (string, optional)
    
+ Response 200

### Add Rating [POST /service/request/rating/{id}]

+ Parameters
    + id (number, required) - Service Request's id
    
+ Request (application/json)
    + Attributes
        + point (number, required)
        + comment (string, optional)
        
+ Response 200

### Upload & Store Files [POST /service/request/storeFiles/{id}]
+ Parameters
    + id (number, required) - Service Request's id
    
+ Request (application/json)
    + Attributes
        + files (array, required)
        
+ Response 200

### Delete an Uploaded File [DELETE /service/request/deleteFiles/{id}]
+ Parameters
    + id (number, required) - File'id

+ Response 200


## OAuth Token [/oauth/token]

### Request Token [POST]
In order to get the api token, user need to authenticate with password grant (OAuth2)

+ Request (application/json)

    + Attributes
    
        + grant_type: password (string, required) - OAuth grant type
        + client_id (number, required) - The client id from system for password grant client.
        + client_secret (string, required) - The client secret from system.
        + username (string, required) - User's username
        + password (string, required) - User's password
        + scope (string) - not applicable for now just left is empty

+ Response 200 (application/json)

        {
            "token_type": "Bearer",
            "expires_in": 31535999,
            "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6IjA0YTdiMzQzZTNjYjY5NmNkYWY1YzQxOTNkMWU1ODA2YWJlNzZlN2RjZjNiZTRiMWYwYWE0NzAzZDQxZTNmZTY1ZTA2OTI1ZDgzNTc3NTEyIn0.eyJhdWQiOiIyIiwianRpIjoiMDRhN2IzNDNlM2NiNjk2Y2RhZjVjNDE5M2QxZTU4MDZhYmU3NmU3ZGNmM2JlNGIxZjBhYTQ3MDNkNDFlM2ZlNjVlMDY5MjVkODM1Nzc1MTIiLCJpYXQiOjE0ODE4NTc3ODcsIm5iZiI6MTQ4MTg1Nzc4NywiZXhwIjoxNTEzMzkzNzg3LCJzdWIiOiIxIiwic2NvcGVzIjpbXX0.Q1w2whkv2zWSvoQZ4c2ut1RZwvE18L2r3Szw6UMVgXKlyJCqtVUOE-L09ohpj3kK56pRm1MkOito0wbQ3vO-uLSMfyRgbd7yQUnwD2WYXtUGFuiFah0cA1LRJQfxZ2Oi_6V4l5QySKS2KcpDD3eIR4ggst1FVIE-z52EFCohxQezmJtl1FaLYCGoB5e1SLGBpzqVUye2GgV8yPaqmVKU0zZ-mWFv72cIUHiJNbh0M_8V1i4lSoiz5UeOp0CZuOBUVhonsLBfF-1HE7AHeQG0o_96COlk2F6m3sZAETvUM7JeN_3KcFYdPklMnqXwOPM3fmP1WjXbXLWDpi0-36U8-Zr__R86aPb9QUq7G394H3mvk_ZfHn0wAyphcaoVbBX_KVs9L5qtD7aghPnVjho44gkCwuPYu70Trp3KkHKphlG4AWuluPXGrsN_lKfqWYkrILnsDD1iUGF4wDUKYHazWcCdupdA5LEPtMNwzImYJyFsd4LJWk6kdYtQ1ncU7vg6eeZV1tP5NQtw0882ItyhhWDj-jemME0rRRJ6vFNAbiq0AiGDEnQYoxQAocusS28F4FwNPtyhsa6TwgNAlM4mGCyGKJosffiw0T68RHsocFEl5BH2twzcNtquA1z-gLWRPbuRy8MTL_dunJR-47ASj0xVjNY-a_x6bm4m3FtPZFg",
            "refresh_token": "TuK9eaWi284r0DrRvViK8pe7E52Stn5z4uXoKo/ePHGvuA3gT9AMKQyQFHmhTt0Aj7kvRB+cKfvT+SOZAIWIjniy4u/flb6WFBvBnY2+/gYXwwyMxdkJbgcdAlpES18QZUht0iYBbBmn9IVvQwhmdggGm2Lc3WXvsw1xjPTf3xgBK+/FKu/XDRH2QTvQtAC4iELtWmjn7oFs1ARAjTgquMF5I6y1fi4/Pb3SksuJRmim6c6hz16ck+HJHJ3KwbhDMQ6qXknnHfwzq3qzBASPyb6Mg2c6wZHFrfEdKCZ8d7B+UBuh/ePP3ztkwc/pFXde3trp83lapyeepOb3oU8pyOm9ySTA4ieP7xueVieyyBPKqYmd1RZvwLXqkfSKrgDSojvhAVR4dob7DOkAwQRT55WjELmhz+ZvQPCLn4r9M8lG4P3x0O45l/96GtsCoi2bXdzDpNbL4BvFmtSDei1ccPaPXBTDvXoGqJbipyRGLXcONidSBDCW60un0eyAXIGKPm+aXaJR6IQlGMoTMIv4yXJXlPEULCKrSCJSD5lDq74WvazQnogDBYQDhp1Xk1H48qSSxz3kf7h1IL4FRBkd3Y5Gm2Kb3Wy9hSKUEYtuVIxsSRg1gh8GHVSPldZS9ZxXgPe7S3V72stoDsXtoHIsYBhR4ULvvkmfBmUMZS0pQM0="
        }

+ Response 401 (application/json)
    
        {
            "error": "invalid_credentials",
            "message": "The user credentials were incorrect."
        }


### Refresh Token [PUT]
Application issues short-lived access tokens, users will need to refresh their access tokens via the refresh token that was provided to them when the access token was issued

+ Request (application/json)

    + Attributes
    
        + grant_type: refresh_token (string, required) - OAuth grant type
        + refresh_token: JvRR3dE7Gs3/Y7fuf6uv65jzPJoWWAiBY+fJhoysZTOtFznFcRieJTU1jCrlGVeOCbbbYnHEvk0aumaw8C6mz0sEzNWJNvolRuZRjvnvfVN180XXjOi3C/vo/62ymcGCtaDiGgqcEofvSAEoFJkegqOsMsuEh91fD/mmDybOKATUxlWO2sww7P6OXVWl1j5akGZc/FcTeTkEgP/cJdlCjPVkA9UIyoVt1aSYG0dSKYbNouh0fDFdHt9pmkmHSlG2jDE7f5rZz/Ypv6BbnoGxftYY7biQhLpIDfXMduqMnQn1q/vm3FGuchDCxC+98YhebaX9muif3yPVRBAkUl1I+e8D8/EXvw07FjJtaf/BwOklSgJ2k//uyBsFWkcMm1V9B1oepyjE11B512Pa4D0Fz+t7MU1AMYBpR+/BpDuVflnGFwIE8THL5H4wEkK2OQSQYBNNCT5yAf3zd7RTf7gay3VaeMdCxL44fyV6tT8a2yrfGzOKUHivQNORq85dB66LzVmtbyUbA+lCnh78MACb0hFzfFxtxO//OEhjG95Kjh02lmI3euztamVi/42P44J280MTqIQexJI2pLopoGoeBwg9wNgDe5QD3sfExpJNwvELwXjEbOv50LJnJ5Xc3diKH45l2vhElxZ1+XZkyu9BNbLMThk9L5zvyliTuyyAc38= (string, required) - Refresh token
        + client_id (number, required) - The client id from system for password grant client.
        + client_secret (string, required) - The client secret from system.
        + scope (string) - not applicable for now just left is empty

+ Response 200 (application/json)

        {
            "token_type": "Bearer",
            "expires_in": 31535999,
            "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6IjA0YTdiMzQzZTNjYjY5NmNkYWY1YzQxOTNkMWU1ODA2YWJlNzZlN2RjZjNiZTRiMWYwYWE0NzAzZDQxZTNmZTY1ZTA2OTI1ZDgzNTc3NTEyIn0.eyJhdWQiOiIyIiwianRpIjoiMDRhN2IzNDNlM2NiNjk2Y2RhZjVjNDE5M2QxZTU4MDZhYmU3NmU3ZGNmM2JlNGIxZjBhYTQ3MDNkNDFlM2ZlNjVlMDY5MjVkODM1Nzc1MTIiLCJpYXQiOjE0ODE4NTc3ODcsIm5iZiI6MTQ4MTg1Nzc4NywiZXhwIjoxNTEzMzkzNzg3LCJzdWIiOiIxIiwic2NvcGVzIjpbXX0.Q1w2whkv2zWSvoQZ4c2ut1RZwvE18L2r3Szw6UMVgXKlyJCqtVUOE-L09ohpj3kK56pRm1MkOito0wbQ3vO-uLSMfyRgbd7yQUnwD2WYXtUGFuiFah0cA1LRJQfxZ2Oi_6V4l5QySKS2KcpDD3eIR4ggst1FVIE-z52EFCohxQezmJtl1FaLYCGoB5e1SLGBpzqVUye2GgV8yPaqmVKU0zZ-mWFv72cIUHiJNbh0M_8V1i4lSoiz5UeOp0CZuOBUVhonsLBfF-1HE7AHeQG0o_96COlk2F6m3sZAETvUM7JeN_3KcFYdPklMnqXwOPM3fmP1WjXbXLWDpi0-36U8-Zr__R86aPb9QUq7G394H3mvk_ZfHn0wAyphcaoVbBX_KVs9L5qtD7aghPnVjho44gkCwuPYu70Trp3KkHKphlG4AWuluPXGrsN_lKfqWYkrILnsDD1iUGF4wDUKYHazWcCdupdA5LEPtMNwzImYJyFsd4LJWk6kdYtQ1ncU7vg6eeZV1tP5NQtw0882ItyhhWDj-jemME0rRRJ6vFNAbiq0AiGDEnQYoxQAocusS28F4FwNPtyhsa6TwgNAlM4mGCyGKJosffiw0T68RHsocFEl5BH2twzcNtquA1z-gLWRPbuRy8MTL_dunJR-47ASj0xVjNY-a_x6bm4m3FtPZFg",
            "refresh_token": "TuK9eaWi284r0DrRvViK8pe7E52Stn5z4uXoKo/ePHGvuA3gT9AMKQyQFHmhTt0Aj7kvRB+cKfvT+SOZAIWIjniy4u/flb6WFBvBnY2+/gYXwwyMxdkJbgcdAlpES18QZUht0iYBbBmn9IVvQwhmdggGm2Lc3WXvsw1xjPTf3xgBK+/FKu/XDRH2QTvQtAC4iELtWmjn7oFs1ARAjTgquMF5I6y1fi4/Pb3SksuJRmim6c6hz16ck+HJHJ3KwbhDMQ6qXknnHfwzq3qzBASPyb6Mg2c6wZHFrfEdKCZ8d7B+UBuh/ePP3ztkwc/pFXde3trp83lapyeepOb3oU8pyOm9ySTA4ieP7xueVieyyBPKqYmd1RZvwLXqkfSKrgDSojvhAVR4dob7DOkAwQRT55WjELmhz+ZvQPCLn4r9M8lG4P3x0O45l/96GtsCoi2bXdzDpNbL4BvFmtSDei1ccPaPXBTDvXoGqJbipyRGLXcONidSBDCW60un0eyAXIGKPm+aXaJR6IQlGMoTMIv4yXJXlPEULCKrSCJSD5lDq74WvazQnogDBYQDhp1Xk1H48qSSxz3kf7h1IL4FRBkd3Y5Gm2Kb3Wy9hSKUEYtuVIxsSRg1gh8GHVSPldZS9ZxXgPe7S3V72stoDsXtoHIsYBhR4ULvvkmfBmUMZS0pQM0="
        }

+ Response 400 (application/json)
    
        {
            "error": "invalid_request",
            "message": "The refresh token is invalid.",
            "hint": "Cannot decrypt the refresh token"
        }
        
## Vacancy* [/vacancy]
### Vacancy List [GET]
Under Maintenance

+ Response 200

## View State [/viewstate]
Account view state management purpose

### Switch View State [PATCH]

+ Request (application/json)
    + Attributes
        + state(string, required) - e.g m_1, v_1
            
+ Response 200

### View State Options [GET]
List all posible view state options
+ Request (application/json)
    + Attributes
        + current(boolean, optional) - if true return current view state
+ Response 200